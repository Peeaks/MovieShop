@model AuthTest.Views.Home.BuyPageViewModel
@{
    ViewBag.Title = "BuyPage";
}

<h2>Buy Movie</h2>

<div class="container" style="padding-top: 30px">
    <div class="col-md-7">
        
        @using (Html.BeginForm()) {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Cart.Movies)
                @Html.HiddenFor(model => model.Cart.PromoCode);
                @Html.HiddenFor(model => model.Cart.Id)

                <h4>Movie</h4>
                
                @if (Model.ErrorString.Any()) {
                    <p>@Model.ErrorString</p>
                }


                <div class="form-group">
                    @Html.LabelFor(model => model.Movie.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(x => x.Movie.Title, new { @readonly = "readonly", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Movie.Title, "", new { @class = "text-danger" })
                    </div>
                </div>
                
                <h4>Personal info</h4>
                
                <div class="form-group">
                    @Html.LabelFor(model => model.ApplicationUser.FirstName, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.TextBoxFor(x => x.ApplicationUser.FirstName, new { @readonly = "readonly", @class = "form-control"})
                        @Html.ValidationMessageFor(model => model.ApplicationUser.FirstName, "", new { @class = "text-danger"})
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(model => model.ApplicationUser.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(x => x.ApplicationUser.LastName, new { @readonly = "readonly", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ApplicationUser.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(model => model.ApplicationUser.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(x => x.ApplicationUser.Email, new { @readonly = "readonly", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ApplicationUser.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(model => model.ApplicationUser.Address.StreetName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(x => x.ApplicationUser.Address.StreetName, new { @readonly = "readonly", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ApplicationUser.Address.StreetName, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.ApplicationUser.Address.StreetNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.TextBoxFor(x => x.ApplicationUser.Address.StreetNumber, new { @readonly = "readonly", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ApplicationUser.Address.StreetNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(model => model.ApplicationUser.Address.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(x => x.ApplicationUser.Address.ZipCode, new { @readonly = "readonly", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ApplicationUser.Address.ZipCode, "", new { @class = "text-danger" })
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(model => model.ApplicationUser.Address.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(x => x.ApplicationUser.Address.Country, new { @readonly = "readonly", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ApplicationUser.Address.Country, "", new { @class = "text-danger" })
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(model => model.PromoCode.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(x => x.PromoCode.Code, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Continue" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="col-md-5">
        <img class="img-responsive" src="@Model.Movie.ImageUrl" alt="">
    </div>
</div>